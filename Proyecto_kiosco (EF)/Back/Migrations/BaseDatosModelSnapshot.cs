// <auto-generated />
using Back;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Back.Migrations
{
    [DbContext(typeof(BaseDatos))]
    partial class BaseDatosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Back.Administrador", b =>
                {
                    b.Property<int>("Id_Administrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Administrador"));

                    b.Property<string>("ApellidoAdministrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAdministrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Administrador");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Back.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("MontoFinal")
                        .HasColumnType("float");

                    b.Property<double>("Precio_Producto")
                        .HasColumnType("float");

                    b.Property<int>("pedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Back.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<int>("producto_proveedorId")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("producto_proveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Back.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoProvedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProvedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cuit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Back.Vendedor", b =>
                {
                    b.Property<int>("numerolegajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("numerolegajo"));

                    b.Property<string>("ApellidoVendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreVendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseñaV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numerolegajo");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("Back.Pedido", b =>
                {
                    b.HasOne("Back.Producto", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("Back.Producto", b =>
                {
                    b.HasOne("Back.Proveedor", "producto_proveedor")
                        .WithMany()
                        .HasForeignKey("producto_proveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto_proveedor");
                });
#pragma warning restore 612, 618
        }
    }
}
